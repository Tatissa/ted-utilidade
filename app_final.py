
import streamlit as st
import pandas as pd
from pathlib import Path
from datetime import datetime

st.set_page_config(page_title="TED Utilidade - Web App Cloud ðŸš€", layout="wide")

st.title("TED Utilidade - Web App Cloud ðŸš€")
st.markdown("Bem-vinda, Tatissa! Seu painel completo TED estÃ¡ carregado aqui.")

# Pastas
Path("dados").mkdir(exist_ok=True)
Path("relatorios").mkdir(exist_ok=True)
Path("simulacoes").mkdir(exist_ok=True)

# Arquivo de produtos
produtos_path = Path("dados/produtos.csv")
produtos_df = pd.read_csv(produtos_path) if produtos_path.exists() else pd.DataFrame(columns=["Produto", "Volume", "Peso", "Caixa"])

# SimulaÃ§Ã£o
st.header("ðŸ“¦ Simular Encaixe de Produtos")
st.table(produtos_df)

# SimulaÃ§Ã£o fictÃ­cia
simulacao_df = produtos_df.copy()
simulacao_df["Caixa"] = "Caixa 1"
st.success("ðŸ“¦ SimulaÃ§Ã£o executada! (Esta Ã© uma simulaÃ§Ã£o demonstrativa)")

# FunÃ§Ã£o para salvar simulaÃ§Ã£o
def salvar_simulacao(simulacao_df, nome_simulacao):
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    nome_arquivo = f"{nome_simulacao}_{timestamp}.csv"
    caminho_arquivo = Path("simulacoes") / nome_arquivo
    simulacao_df.to_csv(caminho_arquivo, index=False)
    return caminho_arquivo

# Interface para salvar simulaÃ§Ã£o
with st.expander("ðŸ’¾ Salvar esta SimulaÃ§Ã£o"):
    nome_simulacao = st.text_input("Nome da SimulaÃ§Ã£o", "simulacao_ted")
    if st.button("Salvar SimulaÃ§Ã£o"):
        caminho = salvar_simulacao(simulacao_df, nome_simulacao)
        st.success(f"SimulaÃ§Ã£o salva como: {caminho.name}")
